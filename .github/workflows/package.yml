name: Build Package

on:
  workflow_run:
    workflows: ["Test GH Pages with Playwright"]
    types:
      - completed

# Add permissions needed for creating releases
permissions:
  contents: write
  packages: write
  actions: read

jobs:
  build-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create artifacts directory
        run: mkdir -p artifacts

      - name: Get version from package.json
        id: package-version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create source code package
        id: create-source-code-package
        run: |
          # Create a zip file of the source code (excluding sensitive files and directories)
          echo "Creating source code package"
          REPO_NAME=$(echo ${{ github.repository }} | cut -d '/' -f 2) 
          echo "repo_name: $REPO_NAME"
          echo "$REPO_NAME" >> $GITHUB_OUTPUT
          echo "version: ${{ steps.package-version.outputs.version }}"
          echo "repository: ${{ github.repository }}"
          echo "artifacts: artifacts/${REPO_NAME}-src_v${{ steps.package-version.outputs.version }}.zip"
          zip -r artifacts/${REPO_NAME}-src_v${{ steps.package-version.outputs.version }}.zip . \
            -x "node_modules/*" \
            -x "dist/*" \
            -x ".git/*" \
            -x "*.gitignore" \
            -x "*.env*" \
            -x "artifacts/*" \
            -x "**/secrets.*" \
            -x "**/config.*" \
            -x "**/credentials.*"

      - name: Upload source code artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.repository }}-src
          path: artifacts/${{ steps.create-source-code-package.outputs.repo_name }}-src_v${{ steps.package-version.outputs.version }}.zip
          retention-days: 5

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          name: Release v${{ steps.package-version.outputs.version }}
          files: artifacts/${{ steps.create-source-code-package.outputs.repo_name }}-src_v${{ steps.package-version.outputs.version }}.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 