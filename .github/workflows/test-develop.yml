name: Test Branch with Playwright against Vite Server

on:
  workflow_dispatch:
  pull_request:
    branches:
      - production

jobs:

  test:
    runs-on: ubuntu-latest
    env:
      VITE_EEN_CLIENT_ID: ${{ secrets.VITE_EEN_CLIENT_ID }}
      VITE_EEN_CLIENT_SECRET: ${{ secrets.VITE_EEN_CLIENT_SECRET }}
      VITE_REDIRECT_URI: ${{ secrets.VITE_REDIRECT_URI }}
      VITE_AUTH_PROXY_URL: https://een-login.klaushofrichter.workers.dev
      VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
      VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
      VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
      VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
      VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
      VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
      VITE_FIREBASE_MEASUREMENT_ID: ${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
      TEST_USER: ${{ secrets.TEST_USER }}
      TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
      PLAYWRIGHT_TEST_BASE_URL: http://127.0.0.1:3333

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Verify Node.js version
        run: npm run check-node

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install chromium --with-deps

      - name: Build application
        run: npm run build

      - name: Start Vite preview server
        run: |
          npm run dev &
          SERVER_PID=$!
          echo "Started Vite server with PID: $SERVER_PID"
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          
          # Wait for server to be ready
          echo "Waiting for server to start..."
          timeout=60
          while ! curl -s http://127.0.0.1:3333 > /dev/null; do
            if [ $timeout -le 0 ]; then
              echo "❌ Server failed to start within 60 seconds"
              kill $SERVER_PID 2>/dev/null || true
              exit 1
            fi
            echo "Waiting... ($timeout seconds remaining)"
            sleep 1
            timeout=$((timeout-1))
          done
          echo "✅ Server is ready!"

      - name: Verify server is responding
        run: |
          echo "Testing server response..."
          curl -I http://127.0.0.1:3333
          echo "Server is responding correctly"

      - name: Run Playwright tests
        run: |
          npx playwright test
          ls -al
          ls -al playwright-report || true
          ls -al test-results || true
          npx playwright show-report || true
        timeout-minutes: 10

      - name: Stop Vite server
        if: always()
        run: |
          if [ ! -z "$SERVER_PID" ]; then
            echo "Stopping server with PID: $SERVER_PID"
            kill $SERVER_PID 2>/dev/null || true
          fi

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Upload test videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-videos
          path: test-results/
          retention-days: 30 
