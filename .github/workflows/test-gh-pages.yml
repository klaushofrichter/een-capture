name: Test GH Pages with Playwright

on:
  workflow_dispatch:
  schedule:
    - cron: 18 3 * * *  # This cron expression runs the workflow every day at 3:18am
    #   - cron: 18 3 * * 5  # This cron expression runs the workflow every Friday  at 3am
  workflow_run:
    workflows: ["Deploy to GitHub Pages"]
    types:
      - completed
    branches:
      - production

jobs:
  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps chromium
    
      - name: Extract repository name
        id: extract_repo_name
        run: |
          REPO="${{ github.repository }}"
          LAST_PART=$(echo "$REPO" | awk -F'/' '{print $NF}')
          echo "LAST_PART: $LAST_PART"
          echo "LAST_PART=$LAST_PART" >> "$GITHUB_OUTPUT"

      - name: Wait for deployment to be available
        run: |
          # Wait up to 5 minutes for the deployment
          timeout=300
          interval=10
          elapsed=0
          url="https://${{ github.repository_owner }}.github.io/${{ steps.extract_repo_name.outputs.LAST_PART }}"
          echo "Waiting for $url to be available..."
          
          until curl --output /dev/null --silent --head --fail "$url"; do
            if [ $elapsed -ge $timeout ]; then
              echo "Timeout waiting for deployment"
              exit 1
            fi
            sleep $interval
            elapsed=$((elapsed + interval))
            echo "Still waiting... ($elapsed seconds elapsed)"
          done
          
          echo "Deployment is available!"

      - name: Run Playwright tests
        env:
          PLAYWRIGHT_TEST_BASE_URL: https://${{ github.repository_owner }}.github.io/${{ steps.extract_repo_name.outputs.LAST_PART }}
          VITE_EEN_CLIENT_ID: ${{ secrets.VITE_EEN_CLIENT_ID }}
          VITE_EEN_CLIENT_SECRET: ${{ secrets.VITE_EEN_CLIENT_SECRET }}
          VITE_REDIRECT_URI: https://${{ github.repository_owner }}.github.io/${{ steps.extract_repo_name.outputs.LAST_PART }}
          VITE_AUTH_PROXY_URL: https://een-login.klaushofrichter.workers.dev
          TEST_USER: ${{ secrets.TEST_USER }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          NODE_ENV: 'production' 
        run: |
          echo "ðŸš€ Running tests against Base URL: ${{ env.PLAYWRIGHT_TEST_BASE_URL }}"
          echo "ðŸ”’ Using Redirect URI: ${{ env.VITE_REDIRECT_URI }}"
          echo "ðŸ”’ NODE_ENV: ${{ env.NODE_ENV }}"
          npx playwright test

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30 
